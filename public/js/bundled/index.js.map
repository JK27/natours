{"mappings":"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","sources":["public/js/mapbox.js","public/js/alerts.js","public/js/updateSettings.js","public/js/stripe.js","public/js/index.js","public/js/login.js"],"sourcesContent":["export const displayMap = locations => {\r\n\t///////////////////////////////////////////////////////// ACCESS TOKEN\r\n\tmapboxgl.accessToken =\r\n\t\t\"pk.eyJ1IjoiamsyNyIsImEiOiJjbDBkenYzaGgwY3dtM2preDVrc3dxdDdwIn0.W28BqhI3NzOAfHHF6PJ0sw\";\r\n\r\n\t///////////////////////////////////////////////////////// MAP VARS\r\n\tvar map = new mapboxgl.Map({\r\n\t\tcontainer: \"map\",\r\n\t\tstyle: \"mapbox://styles/jk27/cl0e14why002u14mlpi0fsfns\",\r\n\t\tscrollZoom: false,\r\n\t});\r\n\t////////////////////////////////////////// BOUNDS\r\n\r\n\tconst bounds = new mapboxgl.LngLatBounds();\r\n\r\n\tlocations.forEach(loc => {\r\n\t\t// DOES => Creates marker.\r\n\t\tconst el = document.createElement(\"div\");\r\n\t\tel.className = \"marker\";\r\n\t\t// DOES => Adds marker.\r\n\t\tnew mapboxgl.Marker({\r\n\t\t\telement: el,\r\n\t\t\tanchor: \"bottom\",\r\n\t\t})\r\n\t\t\t.setLngLat(loc.coordinates)\r\n\t\t\t.addTo(map);\r\n\r\n\t\t// DOES => Adds popup.\r\n\t\tnew mapboxgl.Popup({\r\n\t\t\toffset: 30,\r\n\t\t})\r\n\t\t\t.setLngLat(loc.coordinates)\r\n\t\t\t.setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\r\n\t\t\t.addTo(map);\r\n\r\n\t\t// DOES => Extends map bounds to include current location\r\n\t\tbounds.extend(loc.coordinates);\r\n\t});\r\n\r\n\t// DOES => Makes all markers in the map be visible when loading the page. Extra padding is to save the diagonal edges of the map element.\r\n\tmap.fitBounds(bounds, {\r\n\t\tpadding: {\r\n\t\t\ttop: 200,\r\n\t\t\tbottom: 150,\r\n\t\t\tleft: 100,\r\n\t\t\tright: 100,\r\n\t\t},\r\n\t});\r\n};\r\n","/////////////////////////////////////////////////////////// HIDE ALERT\r\nexport const hideAlert = () => {\r\n\tconst el = document.querySelector(\".alert\");\r\n\tif (el) el.parentElement.removeChild(el);\r\n};\r\n/////////////////////////////////////////////////////////// SHOW ALERT\r\nexport const showAlert = (type, message) => {\r\n\t// DOES => Hides all alertes before showing new alert.\r\n\thideAlert();\r\n\t// NOTE => type is either 'success' or 'error'.\r\n\tconst markup = `<div class=\"alert alert--${type}\">${message}</div>`;\r\n\tdocument.querySelector(\"body\").insertAdjacentHTML(\"afterbegin\", markup);\r\n\t// DOES => Hides alert after 5 seconds.\r\n\twindow.setTimeout(hideAlert, 5000);\r\n};\r\n","import axios from \"axios\";\r\nimport { showAlert } from \"./alerts\";\r\n\r\n/////////////////////////////////////////////////////////// UPDATE SETTINGS\r\n// NOTE => Type is either password or data.\r\nexport const updateSettings = async (data, type) => {\r\n\ttry {\r\n\t\t// DOES => If the type is password, it uses /updateMyPassword. Otherwise, it uses /updateMe.\r\n\t\tconst url =\r\n\t\t\ttype === \"password\"\r\n\t\t\t\t? \"/api/v1/users/updateMyPassword\"\r\n\t\t\t\t: \"/api/v1/users/updateMe\";\r\n\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: \"PATCH\",\r\n\t\t\turl: url,\r\n\t\t\tdata: data,\r\n\t\t});\r\n\r\n\t\tif (res.data.status === \"success\") {\r\n\t\t\tshowAlert(\"success\", `${type.toUpperCase()} updated successfully.`);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tshowAlert(\"error\", err.response.data.message);\r\n\t}\r\n};\r\n","import axios from \"axios\";\r\nimport { showAlert } from \"./alerts\";\r\nconst stripe = process.env.STRIPE_PUBLIC_KEY;\r\n\r\nexport const bookTour = async tourId => {\r\n\ttry {\r\n\t\t// DOES => 1) Gets checkout session from the server.\r\n\t\tconst session = await axios(`/api/v1/bookings/checkout-session/${tourId}`);\r\n\t\t// DOES => 2) Create checkout form  and charge credit card.\r\n\t\tawait stripe.redirectToCheckout({ sessionId: session.data.session.id });\r\n\t\twindow.location.replace(session.data.session.url);\r\n\t} catch (err) {\r\n\t\tconsole.log(err);\r\n\t\tshowAlert(\"error\", err);\r\n\t}\r\n};\r\n","import \"@babel/polyfill\";\r\nimport { displayMap } from \"./mapbox\";\r\nimport { login } from \"./login\";\r\nimport { logout } from \"./login\";\r\nimport { updateSettings } from \"./updateSettings\";\r\nimport { bookTour } from \"./stripe\";\r\n\r\n/////////////////////////////////////////////////////////// DOM ELEMENTS\r\nconst mapBox = document.getElementById(\"map\");\r\nconst loginForm = document.querySelector(\".form--login\");\r\nconst logOutBtn = document.querySelector(\".nav__el--logout\");\r\nconst userDataForm = document.querySelector(\".form-user-data\");\r\nconst userPasswordForm = document.querySelector(\".form-user-password\");\r\nconst bookBtn = document.getElementById(\"book-tour\");\r\n\r\n/////////////////////////////////////////////////////////// DISPLAY MAP\r\nif (mapBox) {\r\n\tconst locations = JSON.parse(mapBox.dataset.locations);\r\n\tdisplayMap(locations);\r\n}\r\n\r\n/////////////////////////////////////////////////////////// EVENT LISTENERS\r\n//////////////////////////////////////////// LOG IN\r\nif (loginForm) {\r\n\tloginForm.addEventListener(\"submit\", e => {\r\n\t\t// DOES => Prevents form from loading any other page.\r\n\t\te.preventDefault();\r\n\t\t// DOES => Gets email and password from form data\r\n\t\tconst email = document.getElementById(\"email\").value;\r\n\t\tconst password = document.getElementById(\"password\").value;\r\n\t\tlogin(email, password);\r\n\t});\r\n}\r\n//////////////////////////////////////////// LOG OUT\r\nif (logOutBtn) logOutBtn.addEventListener(\"click\", logout);\r\n\r\n//////////////////////////////////////////// UPDATE USER DATA\r\nif (userDataForm)\r\n\tuserDataForm.addEventListener(\"submit\", e => {\r\n\t\te.preventDefault();\r\n\t\tconst form = new FormData();\r\n\t\tform.append(\"name\", document.getElementById(\"name\").value);\r\n\t\tform.append(\"email\", document.getElementById(\"email\").value);\r\n\t\tform.append(\"photo\", document.getElementById(\"photo\").files[0]);\r\n\r\n\t\tupdateSettings(form, \"data\");\r\n\t});\r\n\r\n//////////////////////////////////////////// UPDATE USER PASSWORD\r\nif (userPasswordForm)\r\n\tuserPasswordForm.addEventListener(\"submit\", async e => {\r\n\t\te.preventDefault();\r\n\t\tdocument.querySelector(\".btn--save-password\").textContent = \"Updating...\";\r\n\r\n\t\tconst passwordCurrent = document.getElementById(\"password-current\").value;\r\n\t\tconst password = document.getElementById(\"password\").value;\r\n\t\tconst passwordConfirm = document.getElementById(\"password-confirm\").value;\r\n\t\tawait updateSettings(\r\n\t\t\t{ passwordCurrent, password, passwordConfirm },\r\n\t\t\t\"password\"\r\n\t\t);\r\n\r\n\t\tdocument.querySelector(\".btn--save-password\").textContent = \"Save password\";\r\n\t\t// DOES => Clears out contents of input fields after reloading the page.\r\n\t\tdocument.getElementById(\"password-current\").value = \"\";\r\n\t\tdocument.getElementById(\"password\").value = \"\";\r\n\t\tdocument.getElementById(\"password-confirm\").value = \"\";\r\n\t});\r\n\r\n//////////////////////////////////////////// BOOK TOUR\r\n// DOES => When the bookBtn is clicked, first changes the text content and gets tourId data stored in the button element and then calls bookTour on the tour matching that ID.\r\nif (bookBtn)\r\n\tbookBtn.addEventListener(\"click\", e => {\r\n\t\te.target.textContent = \"Processing...\";\r\n\t\tconst tourId = e.target.dataset.tourId;\r\n\t\tbookTour(tourId);\r\n\t});\r\n","import axios from \"axios\";\r\nimport { showAlert } from \"./alerts\";\r\n\r\n/////////////////////////////////////////////////////////// LOG IN\r\nexport const login = async (email, password) => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: \"POST\",\r\n\t\t\turl: \"/api/v1/users/login\",\r\n\t\t\tdata: { email, password },\r\n\t\t});\r\n\t\t// DOES => If log in is successful, then redirect to account page.\r\n\t\tif (res.data.status === \"success\") {\r\n\t\t\tshowAlert(\"success\", \"Logged in successfully.\");\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tlocation.assign(\"/me\");\r\n\t\t\t}, 1500);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tshowAlert(\"error\", err.response.data.message);\r\n\t}\r\n};\r\n\r\n/////////////////////////////////////////////////////////// LOG OUT\r\nexport const logout = async () => {\r\n\ttry {\r\n\t\tconst res = await axios({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: \"/api/v1/users/logout\",\r\n\t\t});\r\n\t\t// DOES => If logged out successfully, then force a reload from the server, redirecting to the overview template.\r\n\t\tif (res.data.status === \"success\") {\r\n\t\t\tshowAlert(\"success\", \"Logged out successfully.\");\r\n\t\t\twindow.setTimeout(() => {\r\n\t\t\t\tlocation.assign(\"/\");\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tshowAlert(\"error\", \"Error logging out. Please try again.\");\r\n\t}\r\n};\r\n"],"names":["$7dc87b7f457e655a$export$516836c6a9dfc573","el","document","querySelector","parentElement","removeChild","$7dc87b7f457e655a$export$de026b00723010c1","type","message","markup","insertAdjacentHTML","window","setTimeout","$955535ce7513e32c$export$f558026a994b6051","async","data","url","$parcel$interopDefault","$cnf0l$axios","method","status","toUpperCase","err","response","$9fd71c92b6f885af$var$stripe","process","env","STRIPE_PUBLIC_KEY","$407eccdc61ba7a94$var$mapBox","getElementById","$407eccdc61ba7a94$var$loginForm","$407eccdc61ba7a94$var$logOutBtn","$407eccdc61ba7a94$var$userDataForm","$407eccdc61ba7a94$var$userPasswordForm","$407eccdc61ba7a94$var$bookBtn","locations","mapboxgl","accessToken","map","Map","container","style","scrollZoom","bounds","LngLatBounds","forEach","loc","createElement","className","Marker","element","anchor","setLngLat","coordinates","addTo","Popup","offset","setHTML","day","description","extend","fitBounds","padding","top","bottom","left","right","$3c4e158d14605c12$export$4c5dd147b21b9176","JSON","parse","dataset","addEventListener","e","preventDefault","email","password","location","assign","$bf5b431e6a69fea8$export$596d806903d1f59e","value","form","FormData","append","files","textContent","passwordCurrent","passwordConfirm","target","tourId","session","redirectToCheckout","sessionId","id","replace","console","log","$9fd71c92b6f885af$export$8d5bdbf26681c0c2"],"version":3,"file":"index.js.map","sourceRoot":"../../../"}